// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.API.Data;

namespace SmartSchool.API.Migrations
{
    [DbContext(typeof(SmartContext))]
    [Migration("20210314194020_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("SmartSchool.API.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tecnologia da Informação"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sistemas de Informação"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ciência da Computação"
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.SchoolSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PrerequisiteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Workload")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PrerequisiteId");

                    b.HasIndex("TeacherId");

                    b.ToTable("SchoolSubjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "Matemática",
                            TeacherId = 1,
                            Workload = 0
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 3,
                            Name = "Matemática",
                            TeacherId = 1,
                            Workload = 0
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Name = "Física",
                            TeacherId = 2,
                            Workload = 0
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 1,
                            Name = "Português",
                            TeacherId = 3,
                            Workload = 0
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 1,
                            Name = "Inglês",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 2,
                            Name = "Inglês",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            Name = "Inglês",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 1,
                            Name = "Programação",
                            TeacherId = 5,
                            Workload = 0
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 2,
                            Name = "Programação",
                            TeacherId = 5,
                            Workload = 0
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 3,
                            Name = "Programação",
                            TeacherId = 5,
                            Workload = 0
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("Registration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Marta",
                            Phone = "33225555",
                            Registration = 1,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 48, DateTimeKind.Local).AddTicks(4612),
                            Surname = "Kent"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paula",
                            Phone = "3354288",
                            Registration = 2,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 48, DateTimeKind.Local).AddTicks(7621),
                            Surname = "Isabela"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laura",
                            Phone = "55668899",
                            Registration = 3,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 48, DateTimeKind.Local).AddTicks(7683),
                            Surname = "Antonia"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Luiza",
                            Phone = "6565659",
                            Registration = 4,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 48, DateTimeKind.Local).AddTicks(7692),
                            Surname = "Maria"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lucas",
                            Phone = "565685415",
                            Registration = 5,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 48, DateTimeKind.Local).AddTicks(7700),
                            Surname = "Machado"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pedro",
                            Phone = "456454545",
                            Registration = 6,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 48, DateTimeKind.Local).AddTicks(7711),
                            Surname = "Alvares"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paulo",
                            Phone = "9874512",
                            Registration = 7,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 48, DateTimeKind.Local).AddTicks(7718),
                            Surname = "José"
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentsCourses");
                });

            modelBuilder.Entity("SmartSchool.API.Models.StudentSchoolSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchoolSubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Grades")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId", "SchoolSubjectId");

                    b.HasIndex("SchoolSubjectId");

                    b.ToTable("StudentSchoolSubject");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            SchoolSubjectId = 2,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 48, DateTimeKind.Local).AddTicks(9293)
                        },
                        new
                        {
                            StudentId = 1,
                            SchoolSubjectId = 4,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(276)
                        },
                        new
                        {
                            StudentId = 1,
                            SchoolSubjectId = 5,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(309)
                        },
                        new
                        {
                            StudentId = 2,
                            SchoolSubjectId = 1,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(311)
                        },
                        new
                        {
                            StudentId = 2,
                            SchoolSubjectId = 2,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(313)
                        },
                        new
                        {
                            StudentId = 2,
                            SchoolSubjectId = 5,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(317)
                        },
                        new
                        {
                            StudentId = 3,
                            SchoolSubjectId = 1,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(319)
                        },
                        new
                        {
                            StudentId = 3,
                            SchoolSubjectId = 2,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(321)
                        },
                        new
                        {
                            StudentId = 3,
                            SchoolSubjectId = 3,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(322)
                        },
                        new
                        {
                            StudentId = 4,
                            SchoolSubjectId = 1,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(325)
                        },
                        new
                        {
                            StudentId = 4,
                            SchoolSubjectId = 4,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(327)
                        },
                        new
                        {
                            StudentId = 4,
                            SchoolSubjectId = 5,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(328)
                        },
                        new
                        {
                            StudentId = 5,
                            SchoolSubjectId = 4,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(330)
                        },
                        new
                        {
                            StudentId = 5,
                            SchoolSubjectId = 5,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(332)
                        },
                        new
                        {
                            StudentId = 6,
                            SchoolSubjectId = 1,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(333)
                        },
                        new
                        {
                            StudentId = 6,
                            SchoolSubjectId = 2,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(335)
                        },
                        new
                        {
                            StudentId = 6,
                            SchoolSubjectId = 3,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(337)
                        },
                        new
                        {
                            StudentId = 6,
                            SchoolSubjectId = 4,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(340)
                        },
                        new
                        {
                            StudentId = 7,
                            SchoolSubjectId = 1,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(341)
                        },
                        new
                        {
                            StudentId = 7,
                            SchoolSubjectId = 2,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(343)
                        },
                        new
                        {
                            StudentId = 7,
                            SchoolSubjectId = 3,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(345)
                        },
                        new
                        {
                            StudentId = 7,
                            SchoolSubjectId = 4,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(346)
                        },
                        new
                        {
                            StudentId = 7,
                            SchoolSubjectId = 5,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 49, DateTimeKind.Local).AddTicks(348)
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("Registration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Name = "Lauro",
                            Registration = 1,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 43, DateTimeKind.Local).AddTicks(4839),
                            Surname = "Oliveira"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Name = "Roberto",
                            Registration = 2,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 44, DateTimeKind.Local).AddTicks(6090),
                            Surname = "Soares"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Name = "Ronaldo",
                            Registration = 3,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 44, DateTimeKind.Local).AddTicks(6138),
                            Surname = "Marconi"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Name = "Rodrigo",
                            Registration = 4,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 44, DateTimeKind.Local).AddTicks(6141),
                            Surname = "Carvalho"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Name = "Alexandre",
                            Registration = 5,
                            StartDate = new DateTime(2021, 3, 14, 16, 40, 20, 44, DateTimeKind.Local).AddTicks(6143),
                            Surname = "Montanha"
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.SchoolSubject", b =>
                {
                    b.HasOne("SmartSchool.API.Models.Course", "Course")
                        .WithMany("SchoolSubjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.API.Models.SchoolSubject", "Prerequisite")
                        .WithMany()
                        .HasForeignKey("PrerequisiteId");

                    b.HasOne("SmartSchool.API.Models.Teacher", "Teacher")
                        .WithMany("SchoolSubjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool.API.Models.StudentCourse", b =>
                {
                    b.HasOne("SmartSchool.API.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.API.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool.API.Models.StudentSchoolSubject", b =>
                {
                    b.HasOne("SmartSchool.API.Models.SchoolSubject", "SchoolSubject")
                        .WithMany("StudentsSchoolSubjects")
                        .HasForeignKey("SchoolSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.API.Models.Student", "Student")
                        .WithMany("StudentsSchoolSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
